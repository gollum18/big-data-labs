extends layout

// File: ./views/index.pug

block content
    if title
        h1= title
    if dataset
        h3= 'Displaying data for the ' + dataset + ' dataset.'

    h3= 'Legend'
    ul
        li 'STREET CRIMES - Blue/Light Blue' 
        li 'OTHER - Orange/Yellow'
        li 'MOTOR VEHICLE THEFT - Green/Light Green' 
        li 'BURGLARY - Red/Light Red'

    div(id='mapid', style='height: 600px;')

    script.
        async function fetchCrimeData () {
            let response = await fetch('http://localhost:3000/crime-data');

            let crimes = await response.json();

            return crimes;
        }

        fetchCrimeData()
            .then(function(crimes) {
                // get a reference to the map, center on portland oregon
                var map = L.map('mapid', {
                    preferCanvas: true
                }).setView([45.5122, -122.6587], 8);

                L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {
                    attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',
                    maxZoom: 18,
                    id: 'mapbox.streets',
                    accessToken: 'insert token here'
                }).addTo(map);

                // the original projection for portland oregon
                var fromProj = 'PROJCS["NAD_1983_HARN_StatePlane_Oregon_North_FIPS_3601_Feet_Intl",GEOGCS["GCS_North_American_1983_HARN",DATUM["D_North_American_1983_HARN",SPHEROID["GRS_1980",6378137.0,298.257222101]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.017453292519943295]],PROJECTION["Lambert_Conformal_Conic"],PARAMETER["False_Easting",8202099.737532808],PARAMETER["False_Northing",0.0],PARAMETER["Central_Meridian",-120.5],PARAMETER["Standard_Parallel_1",44.33333333333334],PARAMETER["Standard_Parallel_2",46.0],PARAMETER["Latitude_Of_Origin",43.66666666666666],UNIT["Foot",0.3048]]';
                // the projection for global lat/lng degrees
                var toProj = 'GEOGCS["GCS_WGS_1984",DATUM["D_WGS_1984",SPHEROID["WGS_1984",6378137,298.257223563]],PRIMEM["Greenwich",0],UNIT["Degree",0.017453292519943295]]';

                // holds marekers created in the next step so we can load them all onto the marker layer at once
                var markers = [];

                // Project the coordinates from the local coordinates to geo-spatial latitude longitude pairs
                // ideally, this should be done at the server before the data is sent over, but it seems to work fine for me right now
                for (var i = 0; i < crimes.length; i++) {
                    var x = crimes[i].x_coordinate;
                    var y = crimes[i].y_coordinate;

                    // use proj4.js to convert the coordinates to latitude/longitude pairs
                    var proj = proj4(fromProj, toProj, [x, y]);

                    // create the lat lng
                    // for some reason I had to flip the lat/lng to get the markers to render in the correct place
                    var ll = L.latLng(proj[1], proj[0]);

                    // determine the color of the circle based on the category of the crime
                    var ccolor, fcolor;
                    if (crimes[i].category == 'STREET CRIMES') {
                        ccolor = '#0000FF'; // blue
                        fcolor = '#ADD8E6'; // light blue
                    } else if (crimes[i].category == 'BURGLARY') {
                        ccolor = '#FF0000'; // red
                        fcolor = '#CD5C5C'; // light red
                    } else if (crimes[i].category == 'MOTOR VEHICLE THEFT') {
                        ccolor = '#008000'; // green
                        fcolor = '#90EE90'; // light green
                    } else {
                        ccolor = '#FFA500'; // orange
                        fcolor = '#FFA000'; // yello
                    }

                    // create the circle marker
                    var cm = L.circleMarker(ll, {
                        color: ccolor,
                        fillColor: fcolor,
                        fillOpacity: 0.5,
                        radius: 5
                    });

                    // plot the lat/lng on the map
                    markers.push(cm);
                }

                // Add the marker layer to the map
                L.layerGroup(markers).addTo(map);
            })
